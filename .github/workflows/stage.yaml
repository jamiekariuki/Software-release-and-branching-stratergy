name: CI + Terraform

on:
  push:
    branches:
      - main

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
  ENVIRONMENT: stage

permissions:
  contents: write

jobs:
  # Step 1: Detect infra changes
  filter-changes:
    runs-on: ubuntu-latest
    outputs:
      infra_changed: ${{ steps.filter.outputs.infra }}
    steps:
      - uses: actions/checkout@v4
      - name: Check for folder changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            infra:
              - 'infrastructure/terraform/**'

  # Step 2: Terraform Apply
  terraform:
    needs: filter-changes
    runs-on: ubuntu-latest
    if: needs.filter-changes.outputs.infra_changed == 'true'

    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Terraform Init
        working-directory: infrastructure/terraform
        run: terraform init -upgrade
      - name: Select Terraform Workspace
        working-directory: infrastructure/terraform
        run: |
          terraform workspace select $ENVIRONMENT || terraform workspace new $ENVIRONMENT
      - name: Terraform Apply
        working-directory: infrastructure/terraform
        env:
          TF_IN_AUTOMATION: true
        run: terraform apply -auto-approve -input=false -var="ENV_PREFIX=$ENVIRONMENT"

  # Step 3: Download TF state from S3 and extract outputs
  tf-outputs:
    runs-on: ubuntu-latest
    outputs:
      ecr_url: ${{ steps.extract.outputs.ecr_url }}
      ec2_ip: ${{ steps.extract.outputs.ec2_ip }}

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Download Terraform state
        run: aws s3 cp "s3://850502433430-app-dev/env:/stage/networking/terraform.tfstate" terraform.tfstate
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Extract outputs
        id: extract
        run: |
          ECR_URL=$(jq -r '.outputs.ecr_repo_uri.value' terraform.tfstate | base64)
          EC2_IP=$(jq -r '.outputs.web_instance_public_ip.value' terraform.tfstate)
          echo "ecr_url=$ECR_URL" >> "$GITHUB_OUTPUT"
          echo "ec2_ip=$EC2_IP" >> "$GITHUB_OUTPUT"

      - name: Debug extracted outputs
        run: |
          echo "ECR_URL=${{ steps.extract.outputs.ecr_url }}"
          echo "EC2_IP=${{ steps.extract.outputs.ec2_ip }}"

  test:
    runs-on: ubuntu-latest
    needs: tf-outputs
    steps:
      - name: Debug extracted outputs
        run: |
          echo "ECR_URL=${{ needs.tf-outputs.outputs.ecr_url }}"
          echo "EC2_IP=${{ needs.tf-outputs.outputs.ec2_ip }}"
