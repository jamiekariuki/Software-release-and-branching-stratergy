name: Dev CI/CD

on:
  push:
    branches:
      - main

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} # AWS account id
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }} # full ECR URI from Terraform
  EC2_USER: ubuntu # default user for EC2
  SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }} # private key for SSH to EC2
  EC2_HOST: ${{ secrets.EC2_PUBLIC_IP }} # public IP from terraform

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: app/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build Vite app
        run: npm run build

  versioning:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      new_version: ${{ steps.bump.outputs.version }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Make bump script executable
        run: chmod +x ./scripts/bump-version.sh

      - name: Bump semantic version
        id: bump
        run: ./scripts/bump-version.sh

  push:
    runs-on: ubuntu-latest
    needs: versioning

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        run: |
          VERSION=${{ needs.versioning.outputs.new_version }}
          echo "Using ECR registry: $ECR_REGISTRY"

          docker build -t $ECR_REGISTRY:$VERSION -t $ECR_REGISTRY:latest ./app
          docker push $ECR_REGISTRY:$VERSION
          docker push $ECR_REGISTRY:latest

  tag_release:
    runs-on: ubuntu-latest
    needs: push

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push Git tag
        run: |
          VERSION=${{ needs.versioning.outputs.new_version }}
          git tag $VERSION
          git push origin $VERSION
